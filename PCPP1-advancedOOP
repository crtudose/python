// class — an idea, blueprint, or recipe for an instance; 
// instance — an instantiation of the class; very often used interchangeably with the term 'object';//
// - instantiation of a class that occupies memory and has data elements. 'self' refers to when we deal with class instances
// object — Python's representation of data and methods; objects could be aggregates of instances (can be class, instance, list, or dictionary.)
// attribute — any object or class trait; could be a variable or method;
// method — a function built into a class that is executed on behalf of the class or object; some say that it’s a 'callable attribute';
// type — refers to the class that was used to instantiate the object.

class Duck:
    def __init__(self, height, weight, sex):
        self.height = height
        self.weight = weight
        self.sex = sex

    def walk(self):
        pass

    def quack(self):
        return print('Quack')

duckling = Duck(height=10, weight=3.4, sex="male")
drake = Duck(height=25, weight=3.7, sex="male")
hen = Duck(height=20, weight=3.4, sex="female")

//In the example presented above, we have created three different instances based on the Duck class: duckling, drake and hen.
