Functions and exceptions
-----------------------
def greet():
    print('Hello, my dear')
greet()
Output: Hello, my dear

input_numbers = [5.0, 6.3, 5.1, 9.9, 10.0]
sum = 0
for number in input_numbers:
    sum += number
average = sum / len(input_numbers)
print(average)
output: 7.26

def get_average(input_numbers):   # parameter given to the function
    sum = 0.0
    for number in input_numbers:
        sum += number
    average = sum / len(input_numbers)
    print(average)
get_average([5.0, 3.5, 7.8, 9.9, 10.0])    # the list passed to the function is called an argument (it can be also a tuple)
output: 7.24
# if you call the function with empty brackets you will get err 'missing argument' and also if you pass an integer, will give err 'object not iterable'

def print_letter_count(text, letter):
    counter = 0
    for char in text:
        if char == letter:
            counter += 1
    print('Number of', letter, 'is', counter)
print_letter_count('Welcome', 'e')  # the order of the arguments is important
# print_letter_count(text='Welcome', letter='e')
output: Number of e is 2
# in the case of print function, end argument has the default value of a new line character
# and the sep argument has the default value of a whitespace character

def print_letter_count(text, letter='a'):
    counter = 0
    for char in text:
        if char == letter:
            counter += 1
    print('Number of', letter, 'is', counter)
print_letter_count('how many letters a are here?')
output: Number of a is 3
